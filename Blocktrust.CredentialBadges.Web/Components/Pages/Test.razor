@page "/codesnippets"
@using Blocktrust.CredentialBadges.Web.Services.GenerateSnippetService
@using Blocktrust.CredentialBadges.Web.Domain

<h3>Code Snippets</h3>

<div class="code-snippet">
    <h4>HTML Code</h4>
    <pre><code>@htmlCode</code></pre>
    <button @onclick="CopyHtmlCode">Copy HTML</button>
</div>

<div class="code-snippet">
    <h4>JavaScript Code</h4>
    <pre><code>@jsCode</code></pre>
    <button @onclick="CopyJsCode">Copy JS</button>
</div>

<div class="code-snippet">
    <h4>CSS Code</h4>
    <pre><code>@cssCode</code></pre>
    <button @onclick="CopyCssCode">Copy CSS</button>
</div>

@code {
    private string htmlCode = "";
    private string jsCode = "";
    private string cssCode = "";

    // Inject the GenerateSnippetService
    [Inject]
    private GenerateSnippetService generateSnippetService { get; set; }

    // On page load or any trigger event, generate the snippets
    protected override void OnInitialized()
    {
        // Simulate a verified credential object
        var credential = new VerifiedCredential
        {
            Name = "Example Credential",
            Description = "This is an example credential.",
            Status = VerifiedCredential.CredentialStatus.Verified,
            Credential = "Sample credential"
        };

        // Generate snippets using the service
        var snippets = generateSnippetService.GenerateSnippets(credential);

        // Assign snippets to respective variables
        htmlCode = snippets.HtmlSnippet;
        jsCode = snippets.JsSnippet;
        cssCode = snippets.CssSnippet;
    }

    private async Task CopyHtmlCode()
    {
        await CopyToClipboard(htmlCode);
    }

    private async Task CopyJsCode()
    {
        await CopyToClipboard(jsCode);
    }

    private async Task CopyCssCode()
    {
        await CopyToClipboard(cssCode);
    }

    private async Task CopyToClipboard(string code)
    {
        // Implement clipboard copy functionality using JavaScript interop
        // await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", code);
    }
}