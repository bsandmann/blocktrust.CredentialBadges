@page "/testbadge"
@using Blocktrust.CredentialBadges.Web.Domain
@using Blocktrust.CredentialBadges.Web.Enums
@using Blocktrust.CredentialBadges.Web.Services.TemplatesService
@inject TemplatesService templatesService

<h3>Test Credential Badges</h3>

<div class="container">
    <div class="row">
        <div class="col">
            <h4>Light Theme Badges</h4>
            @* Image, No Description (Light Theme) *@
            @if (templatesService != null)
            {
                <div class="credential-container">
                    @templatesService.GetPopulatedTemplate("image_no_description_light", "light", GetMockCredential())
                </div>
                <hr />
            }

            @* Image, Description (Light Theme) *@
            @if (templatesService != null)
            {
                <div class="credential-container">
                    @templatesService.GetPopulatedTemplate("image_description_light", "light", GetMockCredential())
                </div>
                <hr />
            }

            @* No Image, Description (Light Theme) *@
            @if (templatesService != null)
            {
                <div class="credential-container">
                    @templatesService.GetPopulatedTemplate("noimage_description_light", "light", GetMockCredential())
                </div>
                <hr />
            }

            @* No Image, No Description (Light Theme) *@
            @if (templatesService != null)
            {
                <div class="credential-container">
                    @templatesService.GetPopulatedTemplate("noimage_no_description_light", "light", GetMockCredential())
                </div>
                <hr />
            }
        </div>
        <div class="col">
            <h4>Dark Theme Badges</h4>
            @* Image, No Description (Dark Theme) *@
            @if (templatesService != null)
            {
                <div class="credential-container">
                    @templatesService.GetPopulatedTemplate("image_no_description_dark", "dark", GetMockCredential())
                </div>
                <hr />
            }

            @* Image, Description (Dark Theme) *@
            @if (templatesService != null)
            {
                <div class="credential-container">
                    @templatesService.GetPopulatedTemplate("image_description_dark", "dark", GetMockCredential())
                </div>
                <hr />
            }

            @* No Image, Description (Dark Theme) *@
            @if (templatesService != null)
            {
                <div class="credential-container">
                    @templatesService.GetPopulatedTemplate("noimage_description_dark", "dark", GetMockCredential())
                </div>
                <hr />
            }

            @* No Image, No Description (Dark Theme) *@
            @if (templatesService != null)
            {
                <div class="credential-container">
                    @templatesService.GetPopulatedTemplate("noimage_no_description_dark", "dark", GetMockCredential())
                </div>
                <hr />
            }
        </div>
    </div>
</div>

@code {
    private VerifiedCredential GetMockCredential()
    {
        return new VerifiedCredential
        {
            Id = Guid.NewGuid(),
            Status = EVerificationStatus.Verified,
            Description = "Sample Credential Description",
            Name = "Sample Credential",
            Image = "https://example.com/credential-image.png",
            Credential = "Credential Information",
            ValidFrom = DateTime.UtcNow.AddDays(-30),
            ValidUntil = DateTime.UtcNow.AddYears(1)
        };
    }
}
