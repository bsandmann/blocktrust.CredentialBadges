@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@rendermode InteractiveServer

<div class="flex">
    <!-- Sidebar -->
    <div class="bg-slate-100 w-full md:w-64 p-4 border-r border-slate-300">
        <div class="flex items-center justify-between mb-4">
            <button @onclick="ToggleCredentialsMenu" class="md:hidden">
                <span class="material-symbols-outlined">menu</span>
            </button>
        </div>
        <nav id="credentialsMenu" class="hidden md:block">
            <ul>
                <li class="mb-2">
                    <a href="/credentials" class="flex items-center p-2 text-slate-400 @((currentPath.Contains("/credentials") && !currentPath.Contains("/pending") && !currentPath.Contains("/approved") && !currentPath.Contains("/declined")) ? "bg-slate-400 text-white" : "hover:bg-slate-400 hover:text-white")">
                        <span class="material-symbols-outlined mr-2 btn">list</span> All
                    </a>
                </li>
                <li class="mb-2">
                    <a href="/credentials/pending" class="flex items-center p-2 text-slate-400 @((currentPath.Contains("/pending")) ? "bg-slate-400 text-white" : "hover:bg-slate-400 hover:text-white")">
                        <span class="material-symbols-outlined mr-2 btn">hourglass_empty</span> Pending
                    </a>
                </li>
                <li class="mb-2">
                    <a href="/credentials/approved" class="flex items-center p-2 text-slate-400 @((currentPath.Contains("/approved")) ? "bg-slate-400 text-white" : "hover:bg-slate-400 hover:text-white")">
                        <span class="material-symbols-outlined mr-2 btn">check_circle</span> Approved
                    </a>
                </li>
                <li class="mb-2">
                    <a href="/credentials/declined" class="flex items-center p-2 text-slate-400 @((currentPath.Contains("/declined")) ? "bg-slate-400 text-white" : "hover:bg-slate-400 hover:text-white")">
                        <span class="material-symbols-outlined mr-2 btn">highlight_off</span> Declined
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>



@code {
    

    string currentPath = string.Empty;
    private bool isMenuOpen = false;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("closeMenuOnResize", "credentialsMenu");
        }
    }

    private async Task ToggleCredentialsMenu()
    {
        await JSRuntime.InvokeVoidAsync("toggleMenu", "credentialsMenu");
    }
    
    protected override void OnInitialized()
    {
        currentPath = NavigationManager.Uri;
        NavigationManager.LocationChanged += LocationChanged;
    }

    private void LocationChanged(object sender, LocationChangedEventArgs e)
    {
        currentPath = e.Location;
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= LocationChanged;
    }





    private void ToggleMenu()
    {
        isMenuOpen = !isMenuOpen;
    }


}

