@page "/profile"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Blocktrust.CredentialBadges.Builder.Data
@using System.Security.Claims
@rendermode InteractiveServer

@attribute [Authorize]

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime

<h2 class="text-2xl font-bold">Profile</h2>
<p>Manage your profile here.</p>

@if (user != null)
{
    <div>
        <p><strong>Name:</strong> @user.UserName</p>
        <button class="btn btn-danger" @onclick="Logout">Logout</button>
    </div>
}
else
{
    <p>Loading user information...</p>
}

@code {
    private ApplicationUser? user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userId = authState.User.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;

        if (!string.IsNullOrEmpty(userId))
        {
            user = await UserManager.FindByIdAsync(userId);
        }
    }

    private async Task Logout()
    {
        await SignInManager.SignOutAsync();
        await JSRuntime.InvokeVoidAsync("redirectTo", "/Account/Logout");
    }
}