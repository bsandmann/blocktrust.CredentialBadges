@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Blocktrust.CredentialBadges.Builder.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register Confirmation</PageTitle>

<div class="max-w-md mx-auto px-4 py-8">
    <h1 class="text-2xl font-semibold text-gray-800 mb-6">Register Confirmation</h1>
    
    <div class="bg-white border border-gray-300 rounded-lg p-6 shadow-sm">
        @if (!string.IsNullOrEmpty(statusMessage))
        {
            <div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4" role="alert">
                <p>@statusMessage</p>
            </div>
        }
        
        @if (emailConfirmationLink is not null)
        {
            <div class="mb-4">
                <p class="text-gray-600 mb-4">
                    This app does not currently have a real email sender registered. See <a href="https://aka.ms/aspaccountconf" class="text-slate-700 hover:text-slate-900 underline">these docs</a> for how to configure a real email sender.
                </p>
                <p class="text-gray-700 font-medium mb-2">
                    Normally this would be emailed:
                </p>
                <a href="@emailConfirmationLink" class="inline-block w-full text-center bg-slate-700 text-white px-4 py-2 rounded hover:bg-slate-600 transition duration-200">
                    Click here to confirm your account
                </a>
            </div>
        }
        else
        {
            <div class="flex items-center mb-4">
                <span class="material-symbols-outlined text-green-500 mr-2">check_circle</span>
                <p class="text-lg text-gray-700 font-medium">Email Sent</p>
            </div>
            <p class="text-gray-600">
                Please check your email to confirm your account. If you don't see the email in your inbox, please check your spam folder.
            </p>
        }
    </div>
    
    <div class="mt-6 text-center">
        <a href="/" class="text-slate-600 hover:text-slate-800 underline">Return to Home</a>
    </div>
</div>

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery] private string? Email { get; set; }

    [SupplyParameterFromQuery] private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}