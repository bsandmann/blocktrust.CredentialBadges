@page "/Account/Manage/Disable2fa"

@using Microsoft.AspNetCore.Identity
@using Blocktrust.CredentialBadges.Builder.Data

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<Disable2fa> Logger

<PageTitle>Disable Two-Factor Authentication (2FA)</PageTitle>

<div class="max-w-md mx-auto px-4 py-8">
    <h1 class="text-2xl font-semibold text-gray-800 mb-6">Disable Two-Factor Authentication (2FA)</h1>
    
    <StatusMessage/>
    
    <div class="bg-white border border-gray-300 rounded-lg p-6 shadow-sm mb-6">
        <div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-6" role="alert">
            <p class="font-bold mb-2">Important Information</p>
            <p class="mb-2">
                <strong>This action only disables 2FA.</strong>
            </p>
            <p>
                Disabling 2FA does not change the keys used in authenticator apps. If you wish to change the key
                used in an authenticator app you should <a href="Account/Manage/ResetAuthenticator" class="text-blue-600 hover:text-blue-800 underline">reset your authenticator keys.</a>
            </p>
        </div>

        <form @formname="disable-2fa" @onsubmit="OnSubmitAsync" method="post">
            <AntiforgeryToken/>
            <button type="submit" class="w-full bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition duration-200">
                Disable 2FA
            </button>
        </form>
    </div>
    
    <div class="mt-6 text-center">
        <a href="/Account/Manage/TwoFactorAuthentication" class="text-slate-600 hover:text-slate-800 underline">Back to Two-Factor Authentication</a>
    </div>
</div>

@code {
    private ApplicationUser user = default!;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        if (HttpMethods.IsGet(HttpContext.Request.Method) && !await UserManager.GetTwoFactorEnabledAsync(user))
        {
            throw new InvalidOperationException("Cannot disable 2FA for user as it's not currently enabled.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(user, false);
        if (!disable2faResult.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred disabling 2FA.");
        }

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("User with ID '{UserId}' has disabled 2fa.", userId);
        RedirectManager.RedirectToWithStatus(
            "Account/Manage/TwoFactorAuthentication",
            "2fa has been disabled. You can reenable 2fa when you setup an authenticator app",
            HttpContext);
    }
}