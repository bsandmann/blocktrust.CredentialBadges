@page "/Account/ResendEmailConfirmation"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Blocktrust.CredentialBadges.Builder.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Resend Email Confirmation</PageTitle>

<div class="max-w-md mx-auto px-4 py-8">
    <h1 class="text-2xl font-semibold text-gray-800 mb-2">Resend Email Confirmation</h1>
    <h2 class="text-lg text-gray-600 mb-6">Enter your email to receive a new confirmation link.</h2>
    
    <div class="bg-white border border-gray-300 rounded-lg p-6 shadow-sm">
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4" role="alert">
                <p>@message</p>
            </div>
        }
        
        <EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            
            <div class="mb-4">
                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                <InputText @bind-Value="Input.Email" id="email" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-0" aria-required="true" placeholder="name@example.com"/>
                <ValidationMessage For="() => Input.Email" class="text-red-600 text-sm mt-1"/>
            </div>
            
            <button type="submit" class="w-full bg-slate-700 text-white px-4 py-2 rounded hover:bg-slate-600 transition duration-200">
                Resend Confirmation Email
            </button>
        </EditForm>
    </div>
    
    <div class="mt-6 text-center">
        <a href="/" class="text-slate-600 hover:text-slate-800 underline">Return to Home</a>
    </div>
</div>

@code {
    private string? message;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            message = "Verification email sent. Please check your email.";
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        message = "Verification email sent. Please check your email.";
    }

    private sealed class InputModel
    {
        [Required] [EmailAddress] public string Email { get; set; } = "";
    }
}